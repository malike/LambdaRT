
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:flow="http://www.springframework.org/schema/webflow-config"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    
   
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:test.config.properties</value>                  
            </list>
        </property>
    </bean>
    
    
<!--    <util:map id="kafkaConsumerConfig" key-type="java.lang.String" value-type="java.lang.String">        
        <entry key="zookeeper.connect" value="${kafka.consumer.zookeeper.connect}"/>
        <entry key="group.id" value="${kafka.consumer.group.id}"/>
        <entry key="zookeeper.session.timeout.ms" value="${kafka.consumer.zookeeper.session.timeout.ms}"/>
        <entry key="zookeeper.sync.time.ms" value="${kafka.consumer.zookeeper.sync.time.ms}"/>
        <entry key="auto.commit.interval.ms" value="${kafka.consumer.auto.commit.interval.ms}"/>
        <entry key="auto.offset.reset" value="${kafka.consumer.auto.offset.reset}"/>
        <entry key="consumer.timeout.ms" value="${kafka.consumer.timeout.ms}"/>
    </util:map>-->
    
    <util:map id="kafkaProducerConfig" key-type="java.lang.String" value-type="java.lang.String">        
        <entry key="metadata.broker.list" value="${kafka.metadata.broker.list}"/>
        <entry key="serializer.class" value="${kafka.serializer.class}"/>
        <!--<entry key="partitioner.class" value="${kafka.partitioner.class}"/>-->
        <entry key="request.required.acks" value="${kafka.request.required.acks}"/>
    </util:map>
    
    
    <bean id="kafkaConsumerService" class="st.malike.service.kafka.KafkaConsumerService" /> 
  
     
    <bean id="kafkaProduceService" class="st.malike.service.kafka.KafkaProduceService" />
    

</beans>